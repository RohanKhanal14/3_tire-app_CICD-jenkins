@Library('Shared-Lib') _
pipeline {
    agent any
    
    parameters {
        string(name: 'FRONTEND_DOCKER_TAG', defaultValue: '', description: 'Frontend Docker tag of the image built by the CI job')
        string(name: 'BACKEND_DOCKER_TAG', defaultValue: '', description: 'Backend Docker tag of the image built by the CI job')
    }

    stages {
        stage("Workspace cleanup"){
            steps{
                script{
                    cleanWs()
                }
            }
        }
        
        stage('Git: Code Checkout') {
            steps {
                script{
                    code_checkout("https://github.com/RohanKhanal14/3_tire-app_CICD-jenkins","main")
                }
            }
        }
        
        stage('Verify: Docker Image Tags') {
            steps {
                script{
                    echo "FRONTEND_DOCKER_TAG: ${params.FRONTEND_DOCKER_TAG}"
                    echo "BACKEND_DOCKER_TAG: ${params.BACKEND_DOCKER_TAG}"
                }
            }
        }
        
        
        stage("Update: Kubernetes manifests"){
            steps{
                script{
                    dir('k8s'){
                        sh """
                            sed -i -E 's#(image: rohankhanal14/task-backend:)[^[:space:]]+#\\1${params.BACKEND_DOCKER_TAG}#' backend-dep.yml
                            """
                    }
                    
                    dir('k8s'){
                        sh """
                            sed -i -E 's#(image: rohankhanal14/task-frontend:)[^[:space:]]+#\\1${params.FRONTEND_DOCKER_TAG}#' frontend-dep.yml
                            """
                    }
                    
                }
            }
        }
        
        stage("Git: Code update and push to GitHub"){
            steps{
                script{
                    withCredentials([gitUsernamePassword(credentialsId: 'Github', gitToolName: 'Default')]) {
                        sh '''
                        echo "Checking repository status: "
                        git status

                        echo "Setting Git identity: "
                        git config --global user.email "rohankhanal114@gmail.com"
                        git config --global user.name "Rohan"

                        echo "Adding changes to git: "
                        git add .

                        echo "Committing changes: "
                        git commit -m "Updated environment variables" || echo "No changes to commit."

                        echo "Pushing changes to GitHub: "
                        git push https://github.com/RohanKhanal14/3_tire-app_CICD-jenkins.git main
                        '''
                    }
                }
            }
        }
    }
  post {
        success {
            emailext (
    to: 'rohankhanal14r@gmail.com',
    subject: "‚úÖ SUCCESS: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
    from: 'rohankhanal14r@gmail.com',
    mimeType: 'text/html',
    body: """
    <html>
    <body style="font-family: Arial, sans-serif; background-color: #f5f7fa; padding: 20px;">
        <div style="max-width: 600px; margin: auto; background-color: #e8f5e9; border-left: 5px solid #4CAF50; padding: 20px; border-radius: 8px;">
            <h2 style="color: #2e7d32;">‚úÖ Build Successful!</h2>
            <p>Hello Rohan,</p>
            <p><strong>Job:</strong> ${env.JOB_NAME}</p>
            <p><strong>Build Number:</strong> #${env.BUILD_NUMBER}</p>
            <p><strong>Status:</strong> <span style="color: green; font-weight: bold;">Success</span></p>
            <p><strong>Triggered By:</strong> ${env.BUILD_CAUSE}</p>
            <p>You can view the build details by clicking the button below:</p>
            <p style="text-align: center;">
                <a href="${env.BUILD_URL}" style="background-color: #4CAF50; color: white; padding: 12px 20px; text-decoration: none; border-radius: 5px;">üîç View Build</a>
            </p>
            <p style="font-size: 12px; color: #666;">This is an automated message from Jenkins CI/CD pipeline.</p>
        </div>
    </body>
    </html>
    """,
    attachLog: true
)
}
      failure {
            emailext (
    to: 'rohankhanal14r@gmail.com',
    subject: "‚ùå FAILED: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
    from: 'rohankhanal14r@gmail.com',
    mimeType: 'text/html',
    body: """
    <html>
    <body style="font-family: Arial, sans-serif; background-color: #f5f7fa; padding: 20px;">
        <div style="max-width: 600px; margin: auto; background-color: #ffebee; border-left: 5px solid #f44336; padding: 20px; border-radius: 8px;">
            <h2 style="color: #c62828;">‚ùå Build Failed!</h2>
            <p>Hello Rohan,</p>
            <p><strong>Job:</strong> ${env.JOB_NAME}</p>
            <p><strong>Build Number:</strong> #${env.BUILD_NUMBER}</p>
            <p><strong>Status:</strong> <span style="color: red; font-weight: bold;">Failed</span></p>
            <p><strong>Triggered By:</strong> ${env.BUILD_CAUSE}</p>
            <p>Check the logs and details to debug the issue:</p>
            <p style="text-align: center;">
                <a href="${env.BUILD_URL}" style="background-color: #f44336; color: white; padding: 12px 20px; text-decoration: none; border-radius: 5px;">üìÑ View Build Logs</a>
            </p>
            <p style="font-size: 12px; color: #666;">This is an automated message from Jenkins CI/CD pipeline.</p>
        </div>
    </body>
    </html>
    """,
    attachLog: true
)
        }
    }
}